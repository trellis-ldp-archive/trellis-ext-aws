apply plugin: 'java-library'

description = 'Trellis cloud extension'

ext {
    moduleName = 'org.trellisldp.ext.aws.neptune.lambda'
}

dependencies {
    api("org.trellisldp:trellis-api:$trellisVersion")
    api("com.amazonaws:aws-java-sdk-lambda:$awsVersion")

    implementation("com.amazonaws.serverless:aws-serverless-java-container-jersey:$awsJerseyVersion")
    implementation("commons-codec:commons-codec:$commonsCodecVersion")
    implementation("io.smallrye:smallrye-config:$smallryeVersion")
    implementation("org.apache.jena:jena-arq:$jenaVersion")
    implementation("org.apache.jena:jena-rdfconnection:$jenaVersion")
    implementation("org.eclipse.microprofile.config:microprofile-config-api:$microprofileConfigVersion")
    implementation("org.slf4j:slf4j-api:$slf4jVersion")
    implementation("org.trellisldp:trellis-agent:$trellisVersion")
    implementation("org.trellisldp:trellis-audit:$trellisVersion")
    implementation("org.trellisldp:trellis-constraint-rules:$trellisVersion")
    implementation("org.trellisldp:trellis-event-serialization:$trellisVersion")
    implementation("org.trellisldp:trellis-io-jena:$trellisVersion")
    implementation("org.trellisldp:trellis-http:$trellisVersion")
    implementation("org.trellisldp:trellis-rdfa:$trellisVersion")
    implementation("org.trellisldp:trellis-triplestore:$trellisVersion")
    implementation("org.trellisldp:trellis-vocabulary:$trellisVersion")
    implementation project(":trellis-aws")

    testImplementation("org.mockito:mockito-core:$mockitoVersion")
    testImplementation("org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion")
}

jar {
    manifest {
        attributes('Automatic-Module-Name': moduleName)
    }
}

test {
    systemProperty 'trellis.neptune.url', "http://example.com"
    systemProperty "trellis.s3.memento.bucket", System.getenv("AWS_TEST_BUCKET") ?: "test.trellisldp.org"
    systemProperty "trellis.s3.binary.bucket", System.getenv("AWS_TEST_BUCKET") ?: "test.trellisldp.org"
    systemProperty "trellis.sns.topic", System.getenv("AWS_TEST_TOPIC") ?: "test-topic"
}

