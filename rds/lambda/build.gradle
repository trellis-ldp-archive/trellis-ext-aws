apply plugin: 'java-library'

description = 'Trellis cloud extension'

ext {
    moduleName = 'org.trellisldp.ext.aws.rds.lambda'
}

dependencies {
    implementation enforcedPlatform("org.trellisldp:trellis-bom:${trellisVersion}")

    api "org.trellisldp:trellis-api"
    api "com.amazonaws:aws-java-sdk-lambda:$awsVersion"

    implementation "com.amazonaws.serverless:aws-serverless-java-container-jersey:$awsJerseyVersion"
    implementation "io.smallrye:smallrye-config:$smallryeVersion"
    implementation "org.eclipse.microprofile.config:microprofile-config-api:$microprofileConfigVersion"
    implementation "org.jdbi:jdbi3-core:$jdbiVersion"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "org.trellisldp:trellis-audit"
    implementation "org.trellisldp:trellis-constraint-rules"
    implementation "org.trellisldp:trellis-event-serialization"
    implementation "org.trellisldp:trellis-io-jena"
    implementation "org.trellisldp:trellis-http"
    implementation "org.trellisldp:trellis-rdfa"
    implementation "org.trellisldp:trellis-vocabulary"
    implementation "org.trellisldp.ext:trellis-db:$trellisDbVersion"
    implementation project(":trellis-aws")

    implementation("mysql:mysql-connector-java:$mysqlVersion")
    implementation("org.postgresql:postgresql:$postgresVersion")

    runtime "javax.xml.bind:jaxb-api:$jaxbVersion"
    runtime "javax.activation:activation:$activationVersion"
    runtime "org.yaml:snakeyaml:$snakeyamlVersion"

    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion"
}

jar {
    manifest {
        attributes('Automatic-Module-Name': moduleName)
    }
}

test {
    systemProperty "trellis.s3.memento.bucket", System.getenv("AWS_TEST_BUCKET") ?: "test.trellisldp.org"
    systemProperty "trellis.s3.binary.bucket", System.getenv("AWS_TEST_BUCKET") ?: "test.trellisldp.org"
    systemProperty "trellis.sns.topic", System.getenv("AWS_TEST_TOPIC") ?: "test-topic"
    systemProperty "trellis.jdbc.url", System.getenv("AWS_RDS_URL") ?: "jdbc-url"
    systemProperty "trellis.jdbc.username", System.getenv("AWS_RDS_USERNAME") ?: "user"
    systemProperty "trellis.jdbc.password", System.getenv("AWS_RDS_PASSWORD") ?: "pass"
}

