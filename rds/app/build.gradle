apply plugin: 'java-library'

description = 'Trellis Cloud Database Application'

ext {
    moduleName = 'org.trellisldp.ext.aws.rds.app'
}

dependencies {
    implementation enforcedPlatform("org.trellisldp:trellis-bom:${trellisVersion}")

    implementation("io.dropwizard:dropwizard-auth:$dropwizardVersion")
    implementation("io.dropwizard:dropwizard-core:$dropwizardVersion")
    implementation("io.dropwizard:dropwizard-http2:$dropwizardVersion")
    implementation("io.dropwizard:dropwizard-jdbi3:$dropwizardVersion")
    implementation("io.dropwizard:dropwizard-metrics:$dropwizardVersion")
    implementation("io.dropwizard:dropwizard-migrations:$dropwizardVersion")
    implementation("io.smallrye:smallrye-config:$smallryeVersion")
    implementation("org.apache.commons:commons-rdf-jena:$commonsRdfVersion") {
        exclude group: 'org.apache.jena', module: 'jena-osgi'
        exclude group: 'org.apache.servicemix.bundles', module: 'org.apache.servicemix.bundles.xerces'
    }
    implementation("org.apache.jena:jena-arq:$jenaVersion")
    implementation("org.eclipse.microprofile.config:microprofile-config-api:$microprofileConfigVersion")
    implementation("org.slf4j:slf4j-api:$slf4jVersion")

    implementation("mysql:mysql-connector-java:$mysqlVersion")
    implementation("org.postgresql:postgresql:$postgresVersion")

    implementation "org.trellisldp:trellis-constraint-rules"
    implementation "org.trellisldp:trellis-io-jena"
    implementation "org.trellisldp:trellis-api"
    implementation "org.trellisldp:trellis-http"
    implementation "org.trellisldp:trellis-vocabulary"
    implementation "org.trellisldp:trellis-audit"
    implementation "org.trellisldp:trellis-event-jackson"
    implementation "org.trellisldp:trellis-webac"
    implementation "org.trellisldp:trellis-rdfa"
    implementation "org.trellisldp:trellis-app"
    implementation "org.trellisldp:trellis-dropwizard"
    implementation "org.trellisldp.ext:trellis-db:$trellisDbVersion"

    implementation project(":trellis-aws")

    runtime "javax.xml.bind:jaxb-api:$jaxbVersion"
    runtime "javax.activation:activation:$activationVersion"
    runtime "org.yaml:snakeyaml:$snakeyamlVersion"

    testImplementation "com.h2database:h2:$h2Version"
    testImplementation "ch.qos.logback:logback-classic:$logbackVersion"
    testImplementation "com.google.guava:guava:$guavaVersion"
    testImplementation "com.opentable.components:otj-pg-embedded:$otjPgVersion"
    testImplementation "io.dropwizard:dropwizard-client:$dropwizardVersion"
    testImplementation "io.dropwizard:dropwizard-testing:$dropwizardVersion"
    testImplementation "org.apache.commons:commons-text:$commonsTextVersion"
    testImplementation "org.awaitility:awaitility:$awaitilityVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.trellisldp:trellis-test"
}

test {
	maxParallelForks = Runtime.runtime.availableProcessors() > 2 ? Runtime.runtime.availableProcessors() / 2 : 1
}

jar {
    manifest {
        attributes('Automatic-Module-Name': moduleName)
    }
}

test {
    systemProperty "trellis.s3.memento.bucket", System.getenv("AWS_TEST_BUCKET") ?: "test.trellisldp.org"
    systemProperty "trellis.s3.binary.bucket", System.getenv("AWS_TEST_BUCKET") ?: "test.trellisldp.org"
    systemProperty "trellis.sns.topic", System.getenv("AWS_TEST_TOPIC") ?: "test-topic"
}

