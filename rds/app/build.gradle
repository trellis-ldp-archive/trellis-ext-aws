apply plugin: 'java-library'
apply plugin: 'osgi'

description = 'Trellis Cloud Database Application'

ext {
    moduleName = 'org.trellisldp.ext.aws.rds.app'
}

dependencies {
    compile("io.dropwizard:dropwizard-auth:$dropwizardVersion")
    compile("io.dropwizard:dropwizard-core:$dropwizardVersion")
    compile("io.dropwizard:dropwizard-http2:$dropwizardVersion")
    compile("io.dropwizard:dropwizard-jdbi3:$dropwizardVersion")
    compile("io.dropwizard:dropwizard-metrics:$dropwizardVersion")
    compile("io.dropwizard:dropwizard-migrations:$dropwizardVersion")
    compile("org.apache.commons:commons-rdf-jena:$commonsRdfVersion")
    compile("org.apache.tamaya:tamaya-core:$tamayaVersion")
    compile("org.slf4j:slf4j-api:$slf4jVersion")

    compile("mysql:mysql-connector-java:$mysqlVersion")
    compile("org.postgresql:postgresql:$postgresVersion")

    compile("org.trellisldp:trellis-constraint-rules:$trellisVersion")
    compile("org.trellisldp:trellis-io-jena:$trellisVersion")
    compile("org.trellisldp:trellis-api:$trellisVersion")
    compile("org.trellisldp:trellis-http:$trellisVersion")
    compile("org.trellisldp:trellis-vocabulary:$trellisVersion")
    compile("org.trellisldp:trellis-agent:$trellisVersion")
    compile("org.trellisldp:trellis-audit:$trellisVersion")
    compile("org.trellisldp:trellis-event-serialization:$trellisVersion")
    compile("org.trellisldp:trellis-webac:$trellisVersion")
    compile("org.trellisldp:trellis-rdfa:$trellisVersion")
    compile("org.trellisldp:trellis-app:$trellisVersion")
    compile("org.trellisldp.ext:trellis-db:$trellisDbVersion")

    compile project(":trellis-aws")

    runtime("javax.xml.bind:jaxb-api:$jaxbVersion")
    runtime("javax.activation:activation:$activationVersion")
    runtime("org.yaml:snakeyaml:$snakeyamlVersion")

    testCompile("com.h2database:h2:$h2Version")
    testCompile("ch.qos.logback:logback-classic:$logbackVersion")
    testCompile("com.google.guava:guava:$guavaVersion")
    testCompile("com.opentable.components:otj-pg-embedded:$otjPgVersion")
    testCompile("io.dropwizard:dropwizard-client:$dropwizardVersion")
    testCompile("io.dropwizard:dropwizard-testing:$dropwizardVersion")
    testCompile("org.apache.commons:commons-text:$commonsTextVersion")
    testCompile("org.awaitility:awaitility:$awaitilityVersion")
    testCompile("org.mockito:mockito-core:$mockitoVersion")
    testCompile("org.trellisldp:trellis-test:$trellisVersion")
}

test {
	maxParallelForks = Runtime.runtime.availableProcessors() / 2
}

jar {
    manifest {
        description project.description
        vendor project.vendor
        license project.license

        instruction 'Automatic-Module-Name', moduleName
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "${moduleName};version=${projectOsgiVersion}"
    }
}

test {
    systemProperty "trellis.s3.memento.bucket", System.getenv("AWS_TEST_BUCKET") ?: "test.trellisldp.org"
    systemProperty "trellis.s3.binary.bucket", System.getenv("AWS_TEST_BUCKET") ?: "test.trellisldp.org"
    systemProperty "trellis.sns.topic", System.getenv("AWS_TEST_TOPIC")
}

